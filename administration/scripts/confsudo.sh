#!/bin/bash

#!/bin/bash

# Get the directory where the script is located
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"

# Inclusion de la biblioth√®que de fonctions partag√©es.
source "$SCRIPT_DIR/../../librairies/lib.sh" || { echo "Erreur: Le fichier lib.sh est introuvable."; exit 1; }



#=============================================================================
# Fonction: configurer_sudo
# Cette fonction offre des options pour la gestion de sudo:
# 1. Ajout d'un utilisateur au groupe sudo.
# 2. Configuration d'un utilisateur pour qu'il n'ait pas √† entrer son mot de passe pour sudo.
# 3. Lancement de 'visudo' pour une √©dition manuelle s√©curis√©e du fichier sudoers.
#=============================================================================
configurer_sudo() {
    print_step "Configuration des droits sudo..."

    local choice
    choice=$(whiptail --menu "Choisissez une option de configuration Sudo :" 15 70 5 \
        "1" "‚ûï Ajouter un utilisateur au groupe sudo" \
        "2" "üîë Configurer un utilisateur pour NOPASSWD (pas de mot de passe pour sudo)" \
        "3" "üìù Modifier le fichier sudoers avec visudo (pour experts)" \
        "4" "‚Ü©Ô∏è Retour au menu pr√©c√©dent" 3>&1 1>&2 2>&3)

    if [[ -z "$choice" ]]; then
        print_step "Configuration Sudo annul√©e."
        return 1
    fi

    case "$choice" in
        1)
            # Ajout d'un utilisateur au groupe sudo.
            print_step "Ajout d'un utilisateur au groupe sudo..."
            local users_to_add
            # R√©cup√®re la liste de tous les utilisateurs humains, comme dans deluser.sh
            users_to_add=$(getent passwd | awk -F: '($3 >= 1000) {print $1}' | grep -vE '^(nobody|systemd-resolve|syslog|daemon|bin|sys|sync|games|man|lp|mail|news|uucp|proxy|www-data|backup|list|irc|gnats|libuuid|systemd-timesync|messagebus|_apt|uuidd|systemd-network|systemd-coredump)$' | tr '\n' ' ')

            if [[ -z "$users_to_add" ]]; then
                print_error "Aucun utilisateur r√©gulier trouv√© √† ajouter au groupe sudo."
                whiptail --msgbox "Aucun utilisateur √† ajouter. Appuyez sur Entr√©e pour revenir au menu Sudo." 8 70
                configurer_sudo # Revenir au menu sudo
                return 1
            fi

            local selected_user
            selected_user=$(whiptail --title "Ajouter au groupe sudo" \
                --menu "Choisissez l'utilisateur √† ajouter au groupe sudo :" 20 70 10 \
                $users_to_add \
                3>&1 1>&2 2>&3)

            if [[ -z "$selected_user" ]]; then
                print_step "S√©lection de l'utilisateur annul√©e. Aucune modification."
                whiptail --msgbox "Op√©ration annul√©e. Appuyez sur Entr√©e pour revenir au menu Sudo." 8 70
                configurer_sudo # Revenir au menu sudo
                return 1
            fi

            # V√©rifie si l'utilisateur est d√©j√† dans le groupe sudo.
            if groups "$selected_user" | grep -qw "sudo"; then
                print_warning "L'utilisateur '$selected_user' est d√©j√† membre du groupe sudo."
            else
                print_step "Ajout de l'utilisateur '$selected_user' au groupe sudo..."
                # 'usermod -aG sudo' : ajoute l'utilisateur au groupe 'sudo' (-a pour append, -G pour group).
                if sudo usermod -aG sudo "$selected_user" &>/dev/null; then
                    print_success "L'utilisateur '$selected_user' a √©t√© ajout√© au groupe sudo."
                    print_step "Il devra se d√©connecter et se reconnecter pour que les changements prennent effet."
                else
                    print_error "√âchec de l'ajout de l'utilisateur '$selected_user' au groupe sudo."
                fi
            fi
            whiptail --msgbox "Op√©ration termin√©e. Appuyez sur Entr√©e pour revenir au menu Sudo." 8 70
            configurer_sudo # Revenir au menu sudo
            ;;
        2)
            # Configurer un utilisateur pour NOPASSWD.
            print_step "Configuration de NOPASSWD pour un utilisateur..."
            whiptail --msgbox "AVERTISSEMENT: Configurer NOPASSWD r√©duit la s√©curit√© du syst√®me car l'utilisateur n'aura pas √† entrer son mot de passe pour les commandes sudo." 10 70

            local users_to_nopasswd
            users_to_nopasswd=$(getent passwd | awk -F: '($3 >= 1000) {print $1}' | grep -vE '^(nobody|systemd-resolve|syslog|daemon|bin|sys|sync|games|man|lp|mail|news|uucp|proxy|www-data|backup|list|irc|gnats|libuuid|systemd-timesync|messagebus|_apt|uuidd|systemd-network|systemd-coredump)$' | tr '\n' ' ')

            if [[ -z "$users_to_nopasswd" ]]; then
                print_error "Aucun utilisateur r√©gulier trouv√© √† configurer pour NOPASSWD."
                whiptail --msgbox "Aucun utilisateur √† configurer. Appuyez sur Entr√©e pour revenir au menu Sudo." 8 70
                configurer_sudo # Revenir au menu sudo
                return 1
            fi

            local selected_user_nopasswd
            selected_user_nopasswd=$(whiptail --title "Configurer NOPASSWD" \
                --menu "Choisissez l'utilisateur pour lequel configurer NOPASSWD :" 20 70 10 \
                $users_to_nopasswd \
                3>&1 1>&2 2>&3)

            if [[ -z "$selected_user_nopasswd" ]]; then
                print_step "S√©lection de l'utilisateur annul√©e. Aucune modification NOPASSWD."
                whiptail --msgbox "Op√©ration annul√©e. Appuyez sur Entr√©e pour revenir au menu Sudo." 8 70
                configurer_sudo # Revenir au menu sudo
                return 1
            fi

            # V√©rifie si l'utilisateur est d√©j√† configur√© NOPASSWD.
            # On cherche la ligne dans sudoers.d/<user> ou dans /etc/sudoers
            if sudo grep -q "$selected_user_nopasswd ALL=(ALL) NOPASSWD: ALL" /etc/sudoers /etc/sudoers.d/* 2>/dev/null; then
                print_warning "L'utilisateur '$selected_user_nopasswd' est d√©j√† configur√© pour NOPASSWD."
                whiptail --msgbox "L'utilisateur '$selected_user_nopasswd' est d√©j√† configur√© pour NOPASSWD. Appuyez sur Entr√©e pour revenir au menu Sudo." 8 70
                configurer_sudo
                return 0
            fi

            if whiptail --yesno "Voulez-vous que l'utilisateur '$selected_user_nopasswd' puisse ex√©cuter des commandes sudo SANS MOT DE PASSE ?" 8 70; then
                print_step "Configuration de NOPASSWD pour '$selected_user_nopasswd'..."
                # Cr√©er un fichier de configuration sp√©cifique pour cet utilisateur dans /etc/sudoers.d/
                local sudoers_d_file="/etc/sudoers.d/$selected_user_nopasswd"
                # Assurez-vous que le r√©pertoire existe
                sudo mkdir -p /etc/sudoers.d &>/dev/null

                # Ajoute la ligne de configuration NOPASSWD.
                # Utilise 'tee' avec 'sudo' pour √©crire dans le fichier.
                # 'visudo -cf' v√©rifie la syntaxe apr√®s modification.
                if echo "$selected_user_nopasswd ALL=(ALL) NOPASSWD: ALL" | sudo tee "$sudoers_d_file" &>/dev/null && \
                   sudo chmod 0440 "$sudoers_d_file" &>/dev/null && \
                   sudo visudo -cf "$sudoers_d_file" &>/dev/null; then
                    print_success "L'utilisateur '$selected_user_nopasswd' peut maintenant utiliser sudo sans mot de passe."
                    print_step "Pour des raisons de s√©curit√©, envisagez de limiter les commandes NOPASSWD si possible."
                else
                    print_error "√âchec de la configuration de NOPASSWD pour l'utilisateur '$selected_user_nopasswd'."
                fi
            else
                print_step "Configuration NOPASSWD annul√©e pour l'utilisateur '$selected_user_nopasswd'."
            fi
            whiptail --msgbox "Op√©ration termin√©e. Appuyez sur Entr√©e pour revenir au menu Sudo." 8 70
            configurer_sudo # Revenir au menu sudo
            ;;
        3)
            # Lancement de visudo.
            print_step "Lancement de 'visudo' pour une √©dition manuelle du fichier sudoers..."
            whiptail --msgbox "ATTENTION: Vous √™tes sur le point de modifier le fichier sudoers.\n\nUne erreur dans ce fichier peut rendre votre syst√®me inutilisable et vous emp√™cher d'utiliser sudo.\n\n'visudo' effectue une v√©rification de syntaxe." 15 70

            if whiptail --yesno "Voulez-vous continuer et modifier le fichier sudoers avec 'visudo' ?" 8 60; then
                print_step "Lancement de 'visudo'..."
                if sudo visudo; then
                    print_success "Le fichier sudoers a √©t√© modifi√© avec succ√®s (ou n'a pas √©t√© modifi√© en cas d'annulation)."
                    print_step "Veuillez v√©rifier vos modifications et tester les droits si n√©cessaire."
                else
                    print_error "√âchec de l'√©dition du fichier sudoers ou modifications non sauvegard√©es. V√©rifiez les erreurs de syntaxe."
                fi
            else
                print_step "Modification du fichier sudoers annul√©e."
            fi
            whiptail --msgbox "Op√©ration termin√©e. Appuyez sur Entr√©e pour revenir au menu Sudo." 8 70
            configurer_sudo # Revenir au menu sudo
            ;;
        4)
            return 0 # Retourne au menu pr√©c√©dent (menu_administration.sh).
            ;;
        *)
            print_error "Option invalide."
            whiptail --msgbox "Option invalide. Appuyez sur Entr√©e pour revenir au menu Sudo." 8 70
            configurer_sudo # Revenir au menu sudo
            ;;
    esac
}

# Lance la fonction au d√©marrage du script.
configurer_sudo